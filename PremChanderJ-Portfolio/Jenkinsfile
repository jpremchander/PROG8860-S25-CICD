pipeline {
    agent any

    environment {
        NODE_VERSION = '20'
        APP_DIR = 'PremChanderJ-Portfolio'
        PORT = '3001'
    }

    triggers {
        githubPush()
    }

    stages {

        stage('Clone Repository') {
            steps {
                git branch: 'lab2/Lab2', url: 'https://github.com/jpremchander/PROG8860-S25-CICD.git'
            }
        }

        stage('Install NodeJS') {
            steps {
                script {
                    sh '''
                        if ! command -v node > /dev/null; then
                            curl -fsSL https://deb.nodesource.com/setup_${NODE_VERSION}.x | sudo -E bash -
                            sudo apt-get install -y nodejs
                        fi
                        node -v
                        npm -v
                    '''
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                dir("${APP_DIR}") {
                    sh 'npm install'
                }
            }
        }

        stage('Lint & Type Check') {
            steps {
                dir("${APP_DIR}") {
                    sh '''
                        npm run lint || true
                        npm run type-check || true
                    '''
                }
            }
        }

        stage('Build Application') {
            steps {
                dir("${APP_DIR}") {
                    sh 'npm run build'
                }
            }
        }

        stage('Stop Previous Instance (if running)') {
            steps {
                script {
                    sh '''
                        PID=$(lsof -t -i:${PORT}) || true
                        if [ ! -z "$PID" ]; then
                            kill -9 $PID
                        fi
                    '''
                }
            }
        }

        stage('Deploy Locally') {
            steps {
                dir("${APP_DIR}") {
                    sh '''
                        nohup npm run start -- -p ${PORT} > nextjs.log 2>&1 &
                    '''
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
